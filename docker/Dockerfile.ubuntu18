# SwarmMap Docker Build - Ubuntu 18.04 base with CUDA 11.8 for RTX A6000
# Using Ubuntu 18.04 for better Pangolin v0.5 compatibility (older ffmpeg)
FROM nvidia/cuda:11.8.0-devel-ubuntu18.04

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV CUDA_ARCH_BIN="8.6"
ENV CUDA_ARCH_PTX="8.6"

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install OpenCV 4.2.0 dependencies (without CUDA support, SwarmMap has its own CUDA kernels)
RUN apt-get update && apt-get install -y \
    libgtk-3-dev \
    libavcodec-dev \
    libavformat-dev \
    libavutil-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    gfortran \
    openexr \
    libatlas-base-dev \
    python3-dev \
    python3-numpy \
    libtbb2 \
    libtbb-dev \
    libdc1394-22-dev \
    libopenexr-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /root

# Download and build OpenCV 4.2.0 (without CUDA support)
RUN echo "Downloading OpenCV 4.2.0..." && \
    wget -q -O opencv.zip https://github.com/opencv/opencv/archive/4.2.0.zip && \
    unzip -q opencv.zip && \
    rm opencv.zip && \
    cd opencv-4.2.0 && \
    mkdir build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D WITH_CUDA=OFF \
        -D WITH_OPENGL=ON \
        -D WITH_TBB=ON \
        -D BUILD_EXAMPLES=OFF \
        -D BUILD_TESTS=OFF \
        -D BUILD_PERF_TESTS=OFF \
        -D BUILD_opencv_apps=OFF \
        -D BUILD_DOCS=OFF \
        .. && \
    make -j8 && \
    make install && \
    ldconfig

# Clean up OpenCV build
RUN cd /root && rm -rf opencv-4.2.0

# Install Pangolin dependencies
RUN apt-get update && apt-get install -y \
    libglew-dev \
    libboost-dev \
    libboost-thread-dev \
    libboost-filesystem-dev \
    && rm -rf /var/lib/apt/lists/*

# Clone and build Pangolin v0.5 (Ubuntu 18.04 has compatible ffmpeg 3.x)
RUN echo "Downloading Pangolin v0.5..." && \
    git clone --branch v0.5 --depth 1 https://github.com/stevenlovegrove/Pangolin.git && \
    cd Pangolin && \
    mkdir build && \
    cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release && \
    make -j8 && \
    make install && \
    ldconfig

# Clean up Pangolin build
RUN cd /root && rm -rf Pangolin

# Verify installations
RUN echo "OpenCV 4.2.0 and Pangolin v0.5 installed successfully"

WORKDIR /root

CMD ["/bin/bash"]
